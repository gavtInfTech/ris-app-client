const coords = [
  [
    26.160044,
    52.067078,
    130.75
  ],
  [
    26.159381,
    52.067793,
    131
  ],
  [
    26.158861,
    52.06838,
    131
  ],
  [
    26.158555,
    52.068763,
    132
  ],
  [
    26.158298,
    52.069202,
    133
  ],
  [
    26.158128,
    52.069581,
    133.25
  ],
  [
    26.158,
    52.070038,
    134.25
  ],
  [
    26.157947,
    52.070497,
    133.25
  ],
  [
    26.157944,
    52.070944,
    132.25
  ],
  [
    26.158019,
    52.071456,
    131.75
  ],
  [
    26.15814,
    52.071977,
    131.75
  ],
  [
    26.15826,
    52.072602,
    132
  ],
  [
    26.158298,
    52.072961,
    132
  ],
  [
    26.158236,
    52.073604,
    132.25
  ],
  [
    26.158079,
    52.073942,
    132.5
  ],
  [
    26.157922,
    52.074193,
    132.5
  ],
  [
    26.15769,
    52.074442,
    132.5
  ],
  [
    26.157436,
    52.074705,
    132.5
  ],
  [
    26.157082,
    52.074974,
    132.75
  ],
  [
    26.156607,
    52.075251,
    133
  ],
  [
    26.156156,
    52.075469,
    133
  ],
  [
    26.15571,
    52.07564,
    133
  ],
  [
    26.155074,
    52.075806,
    133
  ],
  [
    26.154545,
    52.075893,
    132.5
  ],
  [
    26.153747,
    52.07598,
    132
  ],
  [
    26.152661,
    52.07607,
    132.5
  ],
  [
    26.151271,
    52.0762,
    132.25
  ],
  [
    26.150084,
    52.076366,
    131.5
  ],
  [
    26.149411,
    52.076476,
    131.25
  ],
  [
    26.148759,
    52.076629,
    130.5
  ],
  [
    26.148173,
    52.076824,
    130.5
  ],
  [
    26.147594,
    52.077062,
    131.75
  ],
  [
    26.147036,
    52.077339,
    132.5
  ],
  [
    26.14667,
    52.07762,
    133
  ],
  [
    26.146312,
    52.077933,
    133
  ],
  [
    26.146059,
    52.078246,
    133
  ],
  [
    26.145815,
    52.078565,
    133
  ],
  [
    26.145613,
    52.078884,
    133
  ],
  [
    26.145209,
    52.07971,
    133
  ],
  [
    26.144756,
    52.080552,
    131
  ],
  [
    26.144487,
    52.080967,
    130.75
  ],
  [
    26.144189,
    52.081369,
    131.5
  ],
  [
    26.143878,
    52.081723,
    131.75
  ],
  [
    26.143581,
    52.082016,
    132.25
  ],
  [
    26.142549,
    52.082948,
    131.25
  ],
  [
    26.142244,
    52.083256,
    130.25
  ],
  [
    26.141947,
    52.083581,
    130.5
  ],
  [
    26.141692,
    52.083919,
    131.25
  ],
  [
    26.14119,
    52.084738,
    131.5
  ],
  [
    26.1408,
    52.085345,
    132
  ],
  [
    26.1403,
    52.085937,
    132.5
  ],
  [
    26.139999,
    52.086175,
    132.5
  ],
  [
    26.139706,
    52.086341,
    132.5
  ],
  [
    26.139298,
    52.086499,
    132.75
  ],
  [
    26.138738,
    52.08662,
    133
  ],
  [
    26.137996,
    52.086669,
    133.25
  ],
  [
    26.136205,
    52.086643,
    132.75
  ],
  [
    26.135772,
    52.086651,
    131.75
  ],
  [
    26.135399,
    52.086698,
    131.25
  ],
  [
    26.13502,
    52.086793,
    131
  ],
  [
    26.13475,
    52.08693,
    131
  ],
  [
    26.134517,
    52.087099,
    131.25
  ],
  [
    26.134405,
    52.087316,
    131.5
  ],
  [
    26.134372,
    52.087573,
    131.5
  ],
  [
    26.134417,
    52.087848,
    131.5
  ],
  [
    26.134457,
    52.088527,
    131.75
  ],
  [
    26.13445,
    52.088913,
    132.75
  ],
  [
    26.134324,
    52.089331,
    133.25
  ],
  [
    26.134156,
    52.089672,
    132
  ],
  [
    26.133869,
    52.090006,
    130.5
  ],
  [
    26.133568,
    52.090257,
    130.25
  ],
  [
    26.13316,
    52.090547,
    130
  ],
  [
    26.132627,
    52.090794,
    130.75
  ],
  [
    26.132008,
    52.090988,
    131.5
  ],
  [
    26.131343,
    52.091133,
    132
  ],
  [
    26.130173,
    52.091358,
    132.25
  ],
  [
    26.12918,
    52.091588,
    132.75
  ],
  [
    26.128514,
    52.091731,
    133
  ],
  [
    26.127898,
    52.091913,
    133
  ],
  [
    26.127324,
    52.092177,
    133.5
  ],
  [
    26.126906,
    52.092441,
    133.75
  ],
  [
    26.126538,
    52.092749,
    133.5
  ],
  [
    26.12624,
    52.093128,
    133
  ],
  [
    26.12601,
    52.093585,
    132.25
  ],
  [
    26.12554,
    52.094407,
    131.25
  ],
  [
    26.125397,
    52.094657,
    131.75
  ],
  [
    26.125223,
    52.094879,
    132.25
  ],
  [
    26.124976,
    52.095109,
    133
  ],
  [
    26.124669,
    52.095346,
    133
  ],
  [
    26.124227,
    52.095644,
    132.25
  ],
  [
    26.123648,
    52.09597,
    132
  ],
  [
    26.122496,
    52.096592,
    132.75
  ],
  [
    26.122049,
    52.096903,
    133.25
  ],
  [
    26.121638,
    52.097254,
    133.5
  ],
  [
    26.121388,
    52.097541,
    133.5
  ],
  [
    26.12118,
    52.097855,
    132.75
  ],
  [
    26.121047,
    52.098138,
    132.25
  ],
  [
    26.121005,
    52.098486,
    132
  ],
  [
    26.121009,
    52.098835,
    132
  ],
  [
    26.121055,
    52.099192,
    132.25
  ],
  [
    26.121159,
    52.099529,
    132.25
  ],
  [
    26.121341,
    52.099989,
    132.5
  ],
  [
    26.121575,
    52.100396,
    132.25
  ],
  [
    26.121838,
    52.100804,
    132
  ],
  [
    26.122137,
    52.101163,
    131.75
  ],
  [
    26.122543,
    52.101591,
    132
  ],
  [
    26.122786,
    52.101891,
    132.25
  ],
  [
    26.122981,
    52.102236,
    132
  ],
  [
    26.123057,
    52.102539,
    131.75
  ],
  [
    26.123098,
    52.102873,
    131
  ],
  [
    26.123117,
    52.103217,
    130.5
  ],
  [
    26.123033,
    52.104064,
    132.25
  ],
  [
    26.123021,
    52.104532,
    132
  ],
  [
    26.123037,
    52.10527,
    131.25
  ],
  [
    26.123038,
    52.106015,
    131
  ],
  [
    26.122902,
    52.106764,
    131.25
  ],
  [
    26.122748,
    52.107312,
    131.25
  ],
  [
    26.122438,
    52.108191,
    133.25
  ],
  [
    26.122287,
    52.108849,
    132
  ],
  [
    26.122163,
    52.109565,
    131.25
  ],
  [
    26.122042,
    52.110508,
    132
  ],
  [
    26.121942,
    52.111702,
    131.25
  ],
  [
    26.121953,
    52.112239,
    131.75
  ],
  [
    26.121986,
    52.112758,
    132.5
  ],
  [
    26.122035,
    52.113085,
    133
  ],
  [
    26.122119,
    52.113529,
    133.75
  ],
  [
    26.122236,
    52.113988,
    134.5
  ],
  [
    26.122398,
    52.114443,
    135.5
  ],
  [
    26.122775,
    52.1153,
    136.75
  ],
  [
    26.123192,
    52.116216,
    136.5
  ],
  [
    26.123456,
    52.116922,
    136.25
  ],
  [
    26.123585,
    52.117345,
    138.25
  ]
]

coords.forEach((coord) => { console.log('[' + coord[1] + ', ' + coord[0] + ']' + ',')});

function haversineDistance(point1, point2) {
  const R = 6371;
  const toRadians = (degrees) => (degrees * Math.PI) / 180;
  
  const lat1Rad = toRadians(point1[0]);
  const lon1Rad = toRadians(point1[1]);
  const lat2Rad = toRadians(point2[0]);
  const lon2Rad = toRadians(point2[1]);
  
  const deltaLat = lat2Rad - lat1Rad;
  const deltaLon = lon2Rad - lon1Rad;
  
  const a = Math.sin(deltaLat / 2) ** 2 + Math.cos(lat1Rad) * Math.cos(lat2Rad) * Math.sin(deltaLon / 2) ** 2;
  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  const distance = R * c;
  
  return distance;
}

 function findSegmentByKilometer (coords, zeroPoint, startKM, endKM) { 
  let startIndex = null;
  let endIndex = null;
  let sum = 0;

  for (let i = 0; i < coords.length; i++) { 
    if (endIndex == null && i + 1 === coords.length) {
      endIndex = i;
      break;
    }
    sum += haversineDistance(coords[i], coords[i + 1]);
    if (startIndex == null && sum >= (startKM - zeroPoint)) startIndex = i;
    if (endIndex == null && sum >= (endKM - zeroPoint)) {
      endIndex = i;
      break;
    }
  }
  return coords.slice(startIndex, endIndex + 1);
}